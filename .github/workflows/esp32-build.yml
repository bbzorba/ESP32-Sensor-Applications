name: ESP32 CI Build & Flash

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  flash-local:
    runs-on: [self-hosted, windows]
    defaults:
      run:
        shell: powershell
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup ESP-IDF, Install Python Dependencies, and Build
        run: |
          $idfPath = "C:\Users\Xigmatek\esp\esp-idf"
          $projectDir = "button_LED" 
          $idfPython = "C:\Users\Xigmatek\.espressif\python_env\idf4.2_py3.8_env\Scripts\python.exe"

          # Ensure the ESP-IDF environment is set up
          . "$idfPath\export.ps1"

          # Ensure ccache is configured correctly (optional: you might need to explicitly set CCACHE_TMPDIR if needed)
          # Check if CCACHE_TMPDIR is set, if not, set a default temporary directory
          if (-not $env:CCACHE_TMPDIR) {
              Write-Host "CCACHE_TMPDIR is not set. Setting to a default temporary directory."
              $env:CCACHE_TMPDIR = "$env:TEMP\ccache_temp"
              # Ensure the directory exists and has write permissions
              if (-not (Test-Path $env:CCACHE_TMPDIR)) {
                  New-Item -ItemType Directory -Path $env:CCACHE_TMPDIR -Force
              }
              Write-Host "CCACHE_TMPDIR set to: $env:CCACHE_TMPDIR"
          }

          # Navigate to the project directory
          Set-Location $projectDir

          # Install Python dependencies if not already present
          Write-Host "Checking and installing ESP-IDF Python dependencies..."
          & "$idfPython" "$idfPath\tools\idf_tools.py" install python-deps --cached

          # Build the project
          Write-Host "Building the project..."
          & "$idfPython" "$idfPath\tools\idf.py" build

      - name: Flash button_LED to ESP32 (local)
        run: |
          $idfPath = "C:\Users\Xigmatek\esp\esp-idf"
          $projectDir = "button_LED"
          $idfPython = "C:\Users\Xigmatek\.espressif\python_env\idf4.2_py3.8_env\Scripts\python.exe"
          
          . "$idfPath\export.ps1"
          Set-Location $projectDir
          
          Write-Host "Flashing the project..."
          # Removed --verbose as it's not a valid option for 'flash' in idf.py
          & "$idfPython" "$idfPath\tools\idf.py" -p COM7 flash

      - name: Verify firmware on ESP32
        run: |
          $projectDir = "button_LED"
          $idfPath = "C:\Users\Xigmatek\esp\esp-idf"
          $idfPython = "C:\Users\Xigmatek\.espressif\python_env\idf4.2_py3.8_env\Scripts\python.exe"

          Set-Location $projectDir
          
          Write-Host "Starting ESP32 monitor for 10 seconds..."
          # Using a direct Start-Process with a timeout is often more reliable in CI than Start-Job
          $monitorArgs = "$idfPython `"$idfPath\tools\idf.py`" -p COM7 monitor"
          $monitorProcess = Start-Process -FilePath powershell -ArgumentList "-Command", $monitorArgs -Wait -PassThru -RedirectStandardOutput "monitor_output.txt" -RedirectStandardError "monitor_error.txt"
          
          # Wait for a short period to capture initial output
          Start-Sleep -Seconds 10 
          
          # Attempt to stop the monitor process if it's still running
          if ($monitorProcess.HasExited -eq $false) {
              Write-Host "Stopping ESP32 monitor..."
              $monitorProcess.Kill() # Use Kill() for forcefully stopping
              $monitorProcess.WaitForExit()
          }
          
          Write-Host "Monitor output:"
          Get-Content monitor_output.txt
          Write-Host "Monitor error output:"
          Get-Content monitor_error.txt