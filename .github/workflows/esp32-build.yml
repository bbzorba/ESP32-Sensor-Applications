name: ESP32 CI Build & Flash

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  flash-local:
    runs-on: [self-hosted, windows]
    defaults:
      run:
        shell: powershell
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup ESP-IDF environment, install Python deps, build and flash
        run: |
          # 1. Ensure ESP-IDF tools and Python environment are set up
          #    The export.ps1 script should set IDF_PATH and add tools to PATH.
          #    We use '.' to source it in the current session.
          . C:\Users\Xigmatek\esp\esp-idf\export.ps1

          # 2. Explicitly install/update Python dependencies for ESP-IDF.
          #    This is crucial to resolve `gevent` and other library issues.
          #    Using the Python interpreter provided by IDF's tools is best.
          #    Find the python executable that `idf.py` uses. It's often in
          #    <IDF_PATH>\tools\<python_version>\python
          #    If .esp-idf\export.ps1 sets up IDF_PYTHON_ENV_PATH, use that.
          #    Otherwise, find the specific python.exe.
          #    Let's assume export.ps1 sets IDF_PYTHON_ENV_PATH correctly.
          if ($env:IDF_PYTHON_ENV_PATH) {
              Write-Host "Using Python from: $env:IDF_PYTHON_ENV_PATH"
              & $env:IDF_PYTHON_ENV_PATH python -m pip install --upgrade pip
              & $env:IDF_PYTHON_ENV_PATH python -m pip install --upgrade setuptools wheel
              & $env:IDF_PYTHON_ENV_PATH python -m pip install --upgrade -r $env:IDF_PATH/requirements.txt
              # If your project has its own requirements, install them too
              # & $env:IDF_PYTHON_ENV_PATH python -m pip install -r requirements.txt
          } else {
              Write-Host "IDF_PYTHON_ENV_PATH not set. Attempting to use system Python or PlatformIO's Python."
              # Fallback: try to use the Python that idf.py might find.
              # This is less reliable.
              idf.py --version # This might show which python it's using
              # If idf.py uses platformio's python:
              # C:\Users\Xigmatek\.platformio\penv\Scripts\python.exe -m pip install --upgrade pip
              # C:\Users\Xigmatek\.platformio\penv\Scripts\python.exe -m pip install --upgrade setuptools wheel
              # C:\Users\Xigmatek\.platformio\penv\Scripts\python.exe -m pip install --upgrade -r $env:IDF_PATH/requirements.txt
          }
          
          # 3. Navigate to your project directory and build
          cd button_LED
          idf.py build

          # 4. Flash the project
          idf.py -p COM7 flash --verbose

      - name: Verify firmware on ESP32
        run: |
          cd button_LED
          $job = Start-Job { idf.py -p COM7 monitor }
          Start-Sleep -Seconds 5
          Stop-Job $job
          Receive-Job $job